# steps:
# #Build the image
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/myapp:v1', '.']
#   timeout: 180s

# #Push the image
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/myapp:v1']

# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: "bash"
#   args:
#   - "-c"
#   - |
#     echo "Docker Container Built"
#     ls -la
#     ls -al models/
# # deploy container image to GKE
# - name: "gcr.io/cloud-builders/gke-deploy"
#   args:
#   - run
#   - --filename=K8s/
#   - --image=gcr.io/$PROJECT_ID/myapp:v1
#   - --location=us-west1-b
#   - --cluster=mykube
steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  # Run unit tests
  - name: python
    entrypoint: python
    args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"] 

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}']

  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args: ['gcloud', 'run', 'deploy', 'helloworld-${SHORT_SHA}', 
           '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}', 
           '--region', 'us-central1', '--platform', 'managed', 
           '--allow-unauthenticated']

# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://${_BUCKET_NAME}/
    paths:
      - ${SHORT_SHA}_test_log.xml
# Store images in Google Artifact Registry 
images:
  - us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}

# steps:
# #Build the image
#  steps:
#  - name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
#    secretEnv: ['USERNAME', 'PASSWORD']
#  - name: "gcr.io/cloud-builders/docker"
#    entrypoint: 'bash'
#    args: ['-c', 'docker run $$us1313/utsav13:latest']
#    secretEnv: ['USERNAME']
#  availableSecrets:
#    secretManager:
#    - versionName: projects/alaric-365111/secrets/docker-password/versions/1
#      env: 'PASSWORD'
#    - versionName: projects/alaric-365111/secrets/docker-username/versions/1
#      env: 'USERNAME'
# - name: 'python/cloud-builders/docker'
#   args: ['build', '-t', 'python/$PROJECT_ID/myapp:v1', '.']
#   timeout: 180s

# #Push the image
# - name: 'python/cloud-builders/docker'
#   args: ['push', 'python/$PROJECT_ID/myapp:v1']

# - name: 'python/cloud-builders/gcloud'
#   entrypoint: "bash"
#   args:
#   - "-c"
#   - |
#     echo "Docker Container Built"
#     ls -la
#     ls -al models/
# # deploy container image to GKE
# - name: "python/cloud-builders/gke-deploy"
#   args:
#   - run
#   - --filename=K8s/
#   - --image=python/$PROJECT_ID/myapp:v1
#   - --location=us-west1-b
#   - --cluster=mykube

